name: Deploy to EKS

on:
 
  push:
    branches: [ master ]
    paths: [public/*, src/*, .github/workflows/deploy.yaml]

env:
  ECR_REPOSITORY: frontend/web-app
  EKS_CLUSTER_NAME: cr-cluster
  AWS_REGION: ca-central-1

jobs:
  
  build:
    
    name: Deployment
    runs-on: ubuntu-latest

    steps:

    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
        REACT_APP_API: ${{ secrets.REACT_APP_API }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg REACT_APP_API=$REACT_APP_API -f Dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        kubectl apply -f manifests/namespace-config.yaml
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/cr-frontend-deployment.yaml && \
        kubectl config set-context --current --namespace=frontend-namespace && \
        kubectl delete deployments --all && \
        kubectl delete pod --all && \
        kubectl apply -f manifests/cr-frontend-deployment.yaml
